upstream php-service {
	# With php-cgi (or other tcp sockets):
	server 127.0.0.1:9000;

	# With php-fpm (or other unix sockets):
	#server unix:/run/php-fpm.sock;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	server_name _;
	root /app;
	index index.htm index.html index.php;

	# fix redirect (prevent redirect from localhost:<port> to localhost on host machine) when directory no index
	absolute_redirect off;

	# logging format
	access_log /dev/stdout main;

	location / {
		# Check if a file or directory index file exists, else route it to index.php.
		try_files $uri $uri/ /index.php?q=$uri&$args;
	}

	# Pass the PHP scripts to PHP-FPM
	location ~ \.php$ {
		try_files $uri =404;
		fastcgi_pass php-service;
		include fastcgi.conf;

		# hide php version
		fastcgi_hide_header X-Powered-By;

		# override remote_addr: START
		set $realip $remote_addr;

		## Check if X-Forwarded-For header is present and contains an IPv4 or IPv6 address
		if ($http_x_forwarded_for) {
			set $realip $http_x_forwarded_for;
		}
		if ($realip ~ "(.*),") {
			set $realip $1;
		}

		## use IP from Cloudflare
		if ($http_cf_connecting_ip) {
			set $realip $http_cf_connecting_ip;
		}

		## set PHP REMOTE_ADDR
		fastcgi_param REMOTE_ADDR $realip;
		# override remote_addr: END
	}

	# Allow fpm ping and status from localhost
	location ~ ^/(fpm-status|fpm-ping)$ {
		fastcgi_pass php-service;
		include fastcgi.conf;
		access_log off;
		allow 127.0.0.1;
		deny all;

		# Check if the client's IP address is not 127.0.0.1 (not localhost)
		if ($remote_addr != 127.0.0.1) {
			return 404; # Return 404 Not Found for external clients.
		}
	}

	# Deny access to dotfiles for security
	location ~ /\. {
		log_not_found off;
		return 404; # deny all;
	}

	# custom error to app's 404 page
	error_page 404 /index.php/404;
}